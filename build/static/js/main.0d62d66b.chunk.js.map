{"version":3,"sources":["components/common/navBar.jsx","components/common/like.jsx","components/common/TableHead.jsx","components/common/TableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","services/logServicess.js","services/httpServicess.js","services/genreService.js","services/movieService.js","components/movies.jsx","components/cusotmer.jsx","components/rental.jsx","components/home.jsx","components/common/notFound.jsx","components/common/input.jsx","components/common/selections.jsx","components/common/form.jsx","components/common/movieForm.jsx","components/common/login.jsx","components/common/register.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","Link","to","NavLink","Like","classes","this","props","item","onLike","liked","onClick","React","Component","TableHead","raiseSort","path","sortColumn","order","onSort","sortIcon","column","columns","map","label","key","TableBody","content","_","get","data","getTableData","_id","Table","MoviesTable","movie","title","onDelete","type","movies","Pagination","itemCount","pageSize","onPaginationChange","currentPage","pagesCount","Math","ceil","pages","range","page","paginate","items","pageNum","startIndex","slice","take","value","ListGroup","onItemChange","currentItem","textProperty","valueProperty","name","defaultProps","init","logError","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","alert","Promise","reject","post","put","delete","getGenres","a","http","movieApiEndpoint","movieUrl","moiveId","getMovies","getMovie","saveMovie","log","body","deleteMovie","Movies","state","genres","currentGenre","tableHeads","searchValue","setState","handleDelete","originalMovies","movieInDb","filter","m","handleMessage","moviesLength","handleLike","index","indexOf","handleSort","onGenreChange","genre","handleSearch","e","target","getPagedData","allMovies","filterMovies","toLowerCase","includes","orderBy","totalCount","length","result","style","color","textDecoration","placeholder","onChange","Customer","Rental","Home","NotFound","Input","rest","htmlFor","id","Selections","options","option","selected","genreId","Form","errors","validation","Joi","validate","schema","abortEarly","details","message","validationProperty","currentTarget","obj","handleSubmit","preventDefault","doSubmit","handleChange","errorMessage","handleSelect","disabled","MovieForm","numberInStock","dailyRentalRate","string","min","required","number","max","mapMovieToView","movieId","match","params","history","replace","polupateGenres","populateMovie","push","onSubmit","helperInput","helperSelection","helperButton","Login","username","password","Register","legalName","email","App","Fragment","Switch","Route","component","exact","Redirect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.0d62d66b.chunk.js","sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\nconst NavBar = () => {\n  return (\n    <ul className=\"nav\">\n      <li className=\"nav-item\">\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n          Vidly\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/movies\">\n          Movies\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/customer\">\n          Customer\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/rental\">\n          Rental\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/login\">\n          Login\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/register\">\n          Register\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nclass Like extends React.Component {\n  render() {\n    const { item, onLike } = this.props;\n    let classes;\n    if (item.liked === true) {\n      classes = \"fa fa-heart\";\n    } else {\n      classes = \"fa fa-heart-o\";\n    }\n\n    return (\n      <div>\n        <i onClick={onLike} className={classes} aria-hidden=\"true\"></i>\n      </div>\n    );\n  }\n}\n\nLike.propTypes = {\n  item: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n};\n\nexport default Like;\n","import React from \"react\";\nclass TableHead extends React.Component {\n  //\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path) {\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  sortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (sortColumn.path !== column.path) {\n      return null;\n    } else if (sortColumn.order === \"asc\") {\n      return <i className=\"fa fa-sort-asc\"></i>;\n    } else {\n      return <i className=\"fa fa-sort-desc\"></i>;\n    }\n  };\n\n  render() {\n    const { columns } = this.props;\n    return (\n      <thead>\n        <tr>\n          {columns.map((column) => (\n            <th\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.sortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHead;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends React.Component {\n  getTableData(item, column) {\n    if (column.content) {\n      return column.content(item);\n    } else {\n      return _.get(item, column.path);\n    }\n\n    // if (column.path) {\n    //   if (column.path === \"title\") {\n    //     return (\n    //       <Link\n    //         className=\"nav-link active\"\n    //         aria-current=\"page\"\n    //         to={`/movies/${item._id}`}\n    //       >\n    //         {_.get(item, column.path)}\n    //       </Link>\n    //     );\n    //   }\n    //   return _.get(item, column.path);\n    // } else {\n    //   return column.content(item);\n    // }\n  }\n\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={column.path || column.key}>\n                {this.getTableData(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import TableHead from \"./TableHead\";\nimport TableBody from \"./TableBody\";\nconst Table = (props) => {\n  const { sortColumn, onSort, columns, data } = props;\n  return (\n    <table className=\"table \">\n      <TableHead sortColumn={sortColumn} onSort={onSort} columns={columns} />\n      <TableBody data={data} columns={columns} />\n    </table>\n  );\n};\n\nexport default Table;\n","import Like from \"./common/like\";\nimport React from \"react\";\nimport Table from \"./common/table\";\nimport { Link } from \"react-router-dom\";\n\nclass MoviesTable extends React.Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link\n          className=\"nav-link active\"\n          aria-current=\"page\"\n          to={`/movies/${movie._id}`}\n        >\n          {movie.title}\n        </Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like item={movie} onLike={() => this.props.onLike(movie)} />\n      ),\n    },\n    {\n      key: \"delete\",\n      content: (movie) => (\n        <button\n          onClick={() => this.props.onDelete(movie)}\n          type=\"button\"\n          className=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      ),\n    },\n  ];\n  render() {\n    const { movies, sortColumn, onSort } = this.props;\n\n    return (\n      <Table\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n        columns={this.columns}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { PropTypes } from \"prop-types\";\nclass Pagination extends React.Component {\n  render() {\n    const { itemCount, pageSize, onPaginationChange, currentPage } = this.props;\n    const pagesCount = Math.ceil(itemCount / pageSize);\n    if (pagesCount === 1) return null;\n    const pages = _.range(1, pagesCount + 1);\n\n    return (\n      <nav>\n        <ul className=\"pagination\">\n          {pages.map((page) => (\n            <li\n              key={page}\n              className={\n                page === currentPage ? \"page-item active\" : \"page-item \"\n              }\n              onClick={() => onPaginationChange(page)}\n            >\n              <a className=\"page-link\">{page}</a>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    );\n  }\n}\nPagination.propTypes = {\n  itemCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPaginationChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import _ from 'lodash'\n\nexport function paginate (items,pageNum,pageSize) {\n    const startIndex = (pageNum - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value()\n}\n\n","import React from \"react\";\nclass ListGroup extends React.Component {\n  render() {\n    const { items, onItemChange, currentItem, textProperty, valueProperty } =\n      this.props;\n\n    return (\n      <ul className=\"list-group\">\n        {items.map((item) => (\n          <li\n            onClick={() => onItemChange(item)}\n            key={item[valueProperty]}\n            className={\n              item.name === currentItem.name\n                ? \"list-group-item active\"\n                : \"list-group-item\"\n            }\n          >\n            {item[textProperty]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","//import Raven from \"raven-js\";\n\nfunction init(){\n//    Raven.config('https://d31cf666a6bc4656a6e0af2de7674ec2@o389818.ingest.sentry.io/6067258',{\n//     release:'1-0-0',\n//     environment:'development-test ',\n//     }).install()\n  \n}\n\nfunction logError(error){\n    console.error(error)\n    // Raven.captureException(error);\n}\n\n\nexport default {\ninit,\nlogError\n\n}","import axios from 'axios';\nimport logger from './logServicess';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\naxios.interceptors.response.use(null,error=>{\n  //console.log('interceptor called 1');\n  const unexpectedError = error.response && error.response.status >= 400  && error.response.status < 500\n  if(!unexpectedError){\n    logger.logError(error);\n    alert('UNexpected error occurs')\n  }\n\n  return Promise.reject(error)  //we have to retuen it, in order to call the catch block automatically\n})\n\nexport default {\n    get:axios.get,  //get data from server\n    post:axios.post, //create new data\n    put:axios.put, // change data\n    delete: axios.delete //delete data\n\n}","import http from './httpServicess';\n//import config from '../config.json'\n\nexport const getGenres = async ()=>{\n    const {data} = await http.get( '/genres' );\n    //console.log(data,'hi get genres from server')\n    return data;\n};\n\n","import http from './httpServicess';\n//import config from '../config.json';\n\nconst movieApiEndpoint = '/movies';\n\nfunction movieUrl (moiveId){\n    return movieApiEndpoint+ '/' + moiveId\n}\n\nexport const getMovies = async ()=>{\n    const {data} = await http.get(movieApiEndpoint );\n    //console.log(data,'hi get movies from server')\n    return data;\n};\n\nexport const getMovie = async (moiveId) =>{\n    const {data} = await http.get(movieUrl (moiveId));\n    //console.log(data,'111 hi get movies from server')\n    return data;\n}\n\nexport const saveMovie = async (movie) =>{\n    console.log(movie,'111');\n    if(movie._id){\n     const body = {...movie};\n     delete body._id;\n     const {data} = await http.put(movieUrl (movie._id), body );\n     //console.log(data,'22222');\n     return;\n    }\n \n    await http.post(movieApiEndpoint,movie)\n \n \n   }\n\n\n   export const deleteMovie = async (movie)=>{\n     await http.delete(movieUrl (movie._id));\n     const {data} = await http.get(movieApiEndpoint);\n    return data;\n}","import React from \"react\";\n\nimport \"font-awesome/css/font-awesome.css\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\n\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nimport { getGenres } from \"../services/genreService\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\n\nclass Movies extends React.Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentGenre: { _id: \"allGenres\", name: \"All Genres\" },\n    sortColumn: { path: \"title\", order: \"asc\" },\n    tableHeads: [\"Title\", \"Genre\", \"Stock\", \"Rate\", \"\"],\n    pageSize: 4,\n    currentPage: 1,\n    searchValue: \"\",\n  };\n\n  async componentDidMount() {\n    const genres = await getGenres();\n    this.setState({\n      movies: await getMovies(),\n      genres: [{ _id: \"allGenres\", name: \"All Genres\" }, ...genres],\n    });\n  }\n\n  onPaginationChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movieInDb = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies: movieInDb });\n\n    try {\n      await deleteMovie(movie);\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        alert(\"sorry, this post has been deletedå\");\n        this.setState({ movies: originalMovies });\n      }\n    }\n  };\n\n  handleMessage = (moviesLength) => {\n    if (moviesLength !== 0) {\n      return `There are ${moviesLength} movies on your list`;\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = this.state.movies;\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movie };\n    movies[index].liked = !movies[index].liked;\n    //console.log(this.state.movies[0]);\n    this.setState({ movies });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  onGenreChange = (genre) => {\n    //console.log(genre.name, \"hi current genre\");\n    this.setState({ currentGenre: genre, searchValue: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (e) => {\n    const searchValue = e.target.value;\n    this.setState({ searchValue, currentGenre: {}, currentPage: 1 });\n  };\n\n  getPagedData = () => {\n    const {\n      movies: allMovies,\n      pageSize,\n      currentPage,\n      currentGenre,\n      sortColumn,\n      searchValue,\n    } = this.state;\n\n    //\n\n    //\n\n    let filterMovies = allMovies;\n    if (searchValue) {\n      filterMovies = allMovies.filter((movie) =>\n        movie.title.toLowerCase().includes(searchValue.toLowerCase())\n      );\n    } else if (currentGenre.name === \"All Genres\") {\n      filterMovies = allMovies;\n    } else {\n      filterMovies = allMovies.filter(\n        (m) => m.genre.name === currentGenre.name\n      );\n    }\n\n    //\n    //\n\n    // const filterGrenreMovies =\n    //   currentGenre.name === \"All Genres\"\n    //     ? allMovies\n    //     : allMovies.filter((m) => m.genre.name === currentGenre.name);\n\n    const sorted = _.orderBy(filterMovies, sortColumn.path, sortColumn.order);\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filterMovies.length, data: movies };\n  };\n\n  render() {\n    //console.log(this.state.movies, \"hi movies!!!!\");\n    const { genres, pageSize, currentPage, currentGenre, sortColumn } =\n      this.state;\n\n    // console.log(searchFilterMovie, \"hi???\");\n\n    const result = this.getPagedData();\n\n    return (\n      <div className=\"d-flex flex-row m-3\">\n        <div className=\"m-3 col-2\">\n          <ListGroup\n            items={genres}\n            onItemChange={this.onGenreChange}\n            currentItem={currentGenre}\n          />\n        </div>\n        <div className=\"m-3 col\">\n          <div>\n            <button type=\"button\" className=\"btn btn-primary\">\n              <Link\n                to=\"/movies/new\"\n                style={{ color: \"white\", textDecoration: \"none\" }}\n              >\n                New Movies\n              </Link>\n            </button>\n          </div>\n          <div>{this.handleMessage(result.totalCount)}</div>\n          <div className=\"searchbox\">\n            <form className=\"d-flex\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                value={this.state.searchValue}\n                onChange={this.handleSearch}\n              />\n            </form>\n          </div>\n\n          <MoviesTable\n            movies={result.data}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n            sortColumn={sortColumn}\n          />\n          <Pagination\n            itemCount={result.totalCount}\n            pageSize={pageSize}\n            onPaginationChange={this.onPaginationChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","const Customer = () => {\n  return <h1>hi customer page</h1>;\n};\n\nexport default Customer;\n","const Rental = () => {\n  return <h1>hi Rental page</h1>;\n};\n\nexport default Rental;\n","const Home = () => {\n  return <h1>Home Home</h1>;\n};\n\nexport default Home;\n","const NotFound = () => {\n  return <h1>Sorry, not found page 404</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name} className=\"form-label\">\n        {label}\n      </label>\n      <input name={name} id={name} {...rest} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nconst Selections = ({ name, label, onChange, options, data }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name} className=\"form-label \">\n        {label}\n      </label>\n      <div className=\"selection\">\n        <select\n          className=\"form-select\"\n          aria-label=\"Default select example\"\n          onChange={onChange}\n        >\n          {options.map((option) => (\n            <option\n              selected={data.genreId === option._id}\n              key={option._id}\n              value={option._id}\n            >\n              {option.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default Selections;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Selections from \"./selections\";\nclass Form extends React.Component {\n  state = {\n    data: {},\n    errors: {},\n    genres: [],\n  };\n  validation = () => {\n    //console.log(\"validation(),work??\");\n    const { data } = this.state;\n    const errors = {};\n    const result = Joi.validate(data, this.schema, { abortEarly: false });\n    //console.log(result, \"hi joi result\");\n    if (!result.error) {\n      return null;\n    }\n    for (let item of result.error.details) {\n      errors[item.path[0]] = item.message;\n    }\n\n    //console.log(errors, \"hi hi hi\");\n    return errors;\n\n    // //\n\n    // //\n    // if (account.username.trim() === \"\") {\n    //   errors.username = \"username should not  be empty\";\n    // }\n    // if (account.password.trim() === \"\") {\n    //   errors.password = \"password should not be empty\";\n    // }\n    // //console.log(Object.keys(errors).length, \"l\");\n    // return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  validationProperty = (currentTarget) => {\n    const obj = { [currentTarget.name]: currentTarget.value };\n    const schema = { [currentTarget.name]: this.schema[currentTarget.name] };\n    const result = Joi.validate(obj, schema);\n    if (!result.error) {\n      return null;\n    } else {\n      return result.error.details[0].message;\n    }\n\n    // if (currentTarget.name === \"username\") {\n    //   if (currentTarget.value.trim() === \"\") {\n    //     return \"username should not be empty\";\n    //   }\n    // } else if (currentTarget.name === \"password\") {\n    //   if (currentTarget.value.trim() === \"\") {\n    //     return \"password should not be empty\";\n    //   }\n    // } else {\n    //   return null;\n    // }\n  };\n\n  handleSubmit = (e) => {\n    //console.log(\"submit,work??\");\n    e.preventDefault();\n\n    const errors = this.validation();\n    //console.log(errors, \"hi error\");\n    this.setState({ errors: errors || {} });\n    if (errors != null) {\n      return;\n    }\n\n    this.doSubmit();\n  };\n\n  handleChange = (e) => {\n    const { currentTarget } = e;\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validationProperty(currentTarget);\n    if (errorMessage) {\n      errors[currentTarget.name] = errorMessage;\n    } else {\n      delete errors[currentTarget.name];\n    }\n\n    //\n    const data = { ...this.state.data };\n    data[currentTarget.name] = currentTarget.value;\n    this.setState({ data, errors });\n    //console.log(data, \"hi on change\");\n  };\n\n  handleSelect = (e) => {\n    const data = { ...this.state.data };\n    data.genreId = e.currentTarget.value;\n    this.setState({ data });\n  };\n\n  helperInput(name, label, type = \"text\") {\n    //  console.log(\"fff\", this.state.data);\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n  helperSelection(name, label) {\n    const { genres, data } = this.state;\n    return (\n      <Selections\n        name={name}\n        label={label}\n        options={genres}\n        data={data}\n        onChange={this.handleSelect}\n      />\n    );\n  }\n\n  helperButton(label) {\n    return (\n      <button disabled={this.validation()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { getGenres } from \"../../services/genreService\";\nimport { getMovie, saveMovie } from \"../../services/movieService\";\nimport Form from \"./form\";\n\n//\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    errors: {},\n    genres: [],\n  };\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().min(5).required().label(\"Title\"),\n    genreId: Joi.string().min(5).required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .min(0)\n      .max(10)\n      .required()\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .min(0)\n      .max(5)\n      .required()\n      .label(\"Daily Rental Rate\"),\n  };\n\n  async polupateGenres() {\n    const genres = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") {\n      return;\n    }\n\n    try {\n      const movie = await getMovie(movieId);\n      //console.log(movie, \"222\");\n      const data = this.mapMovieToView(movie);\n      this.setState({ data });\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        this.props.history.replace(\"/notFound\");\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.polupateGenres();\n    await this.populateMovie();\n  }\n  //\n\n  mapMovieToView = (movie) => {\n    //console.log(\"fff2\", movie);\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  };\n\n  handleSelect = (e) => {\n    const data = { ...this.state.data };\n    data.genreId = e.currentTarget.value;\n    this.setState({ data });\n  };\n  async doSubmit() {\n    //console.log(this.state.data, \"hi movie!@@@\");\n    const result = await saveMovie(this.state.data);\n    //console.log(result, \"fff hi,new \");\n    //const moviesss = await httpService.getMovies();\n    //console.log(moviesss, \"ddd hi with new\");\n    this.props.history.push(\"/movies\");\n    console.log(\"submited\");\n  }\n\n  render() {\n    //console.log(this.state.data.genreId, \"fff,hi genreeeeeeId\");\n    //console.log(this.state.data, \"hi state datasss\");\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form className=\"login\" onSubmit={this.handleSubmit}>\n          {this.helperInput(\"title\", \"Title\")}\n          {this.helperSelection(\"genres\", \"Genres\")}\n          {this.helperInput(\"numberInStock\", \"Number in Stock\")}\n          {this.helperInput(\"dailyRentalRate\", \"Daily Rental Rate\")}\n          {this.helperButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./form\";\n\nclass Login extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required(),\n    password: Joi.string().required(),\n  };\n\n  doSubmit = () => {\n    //call server\n    console.log(\"form submited\");\n  };\n\n  render() {\n    //console.log(this.state.errors, \"hi errors\");\n\n    return (\n      <div>\n        <h1>Login Page</h1>\n        <form className=\"login\" onSubmit={this.handleSubmit}>\n          {this.helperInput(\"username\", \"Username\")}\n          {this.helperInput(\"password\", \"Passwprd\", \"password\")}\n\n          {this.helperButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport Form from \"./form\";\nimport Joi from \"joi-browser\";\nclass Register extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      legalName: \"\",\n    },\n    errors: {},\n  };\n  schema = {\n    username: Joi.string().email().required(),\n    password: Joi.string().min(5),\n    legalName: Joi.string().min(8).label(\"Name\"),\n  };\n  doSubmit = () => {\n    //call server\n    console.log(\"form submited\");\n  };\n  render() {\n    return (\n      <div>\n        <h1>Register Page</h1>\n        <form className=\"register\" onSubmit={this.handleSubmit}>\n          {this.helperInput(\"username\", \"Username\")}\n          {this.helperInput(\"password\", \"Passwprd\", \"password\")}\n          {this.helperInput(\"legalName\", \"Name\")}\n\n          {this.helperButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","\nimport React from 'react';\nimport { Route,Switch,Redirect } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/common/navBar';\nimport Movies from './components/movies';\nimport Customer from './components/cusotmer';\nimport Rental from './components/rental';\nimport Home from './components/home';\nimport NotFound from './components/common/notFound';\nimport MovieForm from './components/common/movieForm';\nimport Login from './components/common/login';\nimport Register from './components/common/register';\n\n\n\nfunction App() {\n  return (\n   <React.Fragment>\n    <NavBar/>\n    <Switch>\n    <Route path='/customer' component={Customer}/>\n    <Route path='/rental' component={Rental}/>\n    <Route path='/movies/:id' component={MovieForm}/>\n    <Route path='/movies' component={Movies}/>\n    <Route path='/login' component={Login}/>\n    <Route path='/register' component={Register}/>\n    <Route path='/not-found' component={NotFound}/>\n    <Route path='/' exact component={Home}/>\n    <Redirect to='not-found'/>\n    </Switch>\n    </React.Fragment>\n    \n\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css'\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.Fragment>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}