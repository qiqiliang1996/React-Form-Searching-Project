{"version":3,"sources":["components/common/navBar.jsx","components/common/like.jsx","components/common/TableHead.jsx","components/common/TableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","services/httpServicess.js","services/genreService.js","services/movieService.js","components/movies.jsx","components/common/notFound.jsx","components/common/input.jsx","components/common/selections.jsx","components/common/form.jsx","components/common/movieForm.jsx","services/registerService.js","services/authService.js","components/register.jsx","components/login.jsx","components/logout.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","className","NavLink","to","type","id","name","Like","classes","this","props","item","onLike","liked","onClick","React","Component","TableHead","raiseSort","path","sortColumn","order","onSort","sortIcon","column","columns","map","label","key","TableBody","content","_","get","data","getTableData","_id","Table","MoviesTable","movie","Link","title","onDelete","movies","Pagination","itemCount","pageSize","onPaginationChange","currentPage","pagesCount","Math","ceil","pages","range","page","paginate","items","pageNum","startIndex","slice","take","value","ListGroup","onItemChange","currentItem","textProperty","valueProperty","defaultProps","axios","defaults","baseURL","process","interceptors","response","use","error","status","alert","Promise","reject","token","post","put","delete","getGenres","a","http","movieApiEndpoint","getMovies","getMovie","moiveId","saveMovie","body","deleteMovie","Movies","state","genres","currentGenre","tableHeads","searchValue","setState","handleDelete","originalMovies","movieInDb","filter","m","handleMessage","moviesLength","handleLike","index","indexOf","handleSort","onGenreChange","genre","handleSearch","e","target","getPagedData","allMovies","filterMovies","toLowerCase","includes","orderBy","totalCount","length","result","style","color","textDecoration","placeholder","onChange","NotFound","Input","rest","htmlFor","Selections","options","option","selected","genreId","Form","errors","validation","Joi","validate","schema","abortEarly","details","message","validationProperty","currentTarget","obj","handleSubmit","preventDefault","doSubmit","handleChange","errorMessage","handleSelect","disabled","MovieForm","numberInStock","dailyRentalRate","string","min","required","number","max","mapMovieToView","movieId","match","params","console","log","history","replace","polupateGenres","populateMovie","push","onSubmit","helperInput","helperSelection","helperButton","register","login","jwt","localStorage","setItem","logout","removeItem","getCurrentUserFromLocalStorage","getItem","jwt_decode","ex","loginWithJwt","headers","common","Register","email","password","window","location","Login","Logout","componentDidMount","App","Fragment","Switch","Route","component","render","Redirect","from","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.262a1296.chunk.js","sourcesContent":["import {  NavLink } from \"react-router-dom\";\nconst NavBar = ({user}) => {\n  // console.log(user,'user inside nav')\n  return (\n    <nav className=\"navbar navbar-expand-lg bg-light\">\n  <div className=\"container-fluid\">\n    <NavLink className=\"navbar-brand\" to=\"/\">Vidly</NavLink>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link active\" aria-current=\"page\" to=\"/\">Movies</NavLink>\n        </li>\n        {!user && <> <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/login\">\n          Login\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/register\">\n          Register\n        </NavLink>\n      </li></>}\n      {user && <> <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/profile\">\n          {user.name}\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/logout\">\n          Logout\n        </NavLink>\n      </li></>}\n        \n      </ul>\n    </div>\n  </div>\n</nav>\n    // <ul className=\"nav\">\n    //   <li className=\"nav-item\">\n    //     <NavLink className=\"nav-link\" to=\"/movies\">\n    //       Movies\n    //     </NavLink>\n    //   </li>\n      // {!user && <> <li className=\"nav-item\">\n      //   <NavLink className=\"nav-link\" to=\"/login\">\n      //     Login\n      //   </NavLink>\n      // </li>\n      // <li className=\"nav-item\">\n      //   <NavLink className=\"nav-link\" to=\"/register\">\n      //     Register\n      //   </NavLink>\n      // </li></>}\n      // {user && <> <li className=\"nav-item\">\n      //   <NavLink className=\"nav-link\" to=\"/profile\">\n      //     {user.name}\n      //   </NavLink>\n      // </li>\n      // <li className=\"nav-item\">\n      //   <NavLink className=\"nav-link\" to=\"/logout\">\n      //     Logout\n      //   </NavLink>\n      // </li></>}\n    // </ul>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nclass Like extends React.Component {\n  render() {\n    const { item, onLike } = this.props;\n    let classes;\n    if (item.liked === true) {\n      classes = \"fa fa-heart\";\n    } else {\n      classes = \"fa fa-heart-o\";\n    }\n\n    return (\n      <div>\n        <i onClick={onLike} className={classes} aria-hidden=\"true\"></i>\n      </div>\n    );\n  }\n}\n\nLike.propTypes = {\n  item: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n};\n\nexport default Like;\n","import React from \"react\";\nclass TableHead extends React.Component {\n  //\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path) {\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  sortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (sortColumn.path !== column.path) {\n      return null;\n    } else if (sortColumn.order === \"asc\") {\n      return <i className=\"fa fa-sort-asc\"></i>;\n    } else {\n      return <i className=\"fa fa-sort-desc\"></i>;\n    }\n  };\n\n  render() {\n    const { columns } = this.props;\n    return (\n      <thead>\n        <tr>\n          {columns.map((column) => (\n            <th\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label}\n              {/* {this.sortIcon(column)} */}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHead;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends React.Component {\n  getTableData(item, column) {\n    if (column.content) {\n      return column.content(item);\n    } else {\n      return _.get(item, column.path);\n    }\n  }\n\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={column.path || column.key}>\n                {this.getTableData(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import TableHead from \"./TableHead\";\nimport TableBody from \"./TableBody\";\nconst Table = (props) => {\n  const { sortColumn, onSort, columns, data } = props;\n  return (\n    <table className=\"table \">\n      <TableHead sortColumn={sortColumn} onSort={onSort} columns={columns} />\n      <TableBody data={data} columns={columns} />\n    </table>\n  );\n};\n\nexport default Table;\n","import Like from \"./common/like\";\nimport React from \"react\";\nimport Table from \"./common/table\";\nimport { Link } from \"react-router-dom\";\n// import {getCurrentUserFromLocalStorage} from '../services/authService'\n\nclass MoviesTable extends React.Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link\n          className=\"nav-link active\"\n          aria-current=\"page\"\n          to={`/movies/${movie._id}`}\n        >\n          {movie.title}\n        </Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like item={movie} onLike={() => this.props.onLike(movie)} />\n      ),\n    },\n    {\n      key: \"delete\",\n      content: (movie) => (\n        <button\n          onClick={() => this.props.onDelete(movie)}\n          type=\"button\"\n          className=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      ),\n    } \n    \n  ];\n  render() {\n    const { movies, sortColumn, onSort } = this.props;\n\n    return (\n      <Table\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n        columns={this.columns}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { PropTypes } from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nclass Pagination extends React.Component {\n  render() {\n    const { itemCount, pageSize, onPaginationChange, currentPage } = this.props;\n    const pagesCount = Math.ceil(itemCount / pageSize);\n    if (pagesCount === 1) return null;\n    const pages = _.range(1, pagesCount + 1);\n\n    return (\n      <nav>\n        <ul className=\"pagination\">\n          {pages.map((page) => (\n            <li\n              key={page}\n              className={\n                page === currentPage ? \"page-item active\" : \"page-item \"\n              }\n              onClick={() => onPaginationChange(page)}\n            >\n              <a className=\"page-link\">{page}</a>\n              \n            </li>\n          ))}\n        </ul>\n      </nav>\n    );\n  }\n}\nPagination.propTypes = {\n  itemCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPaginationChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import _ from 'lodash'\n\nexport function paginate (items,pageNum,pageSize) {\n    const startIndex = (pageNum - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value()\n}\n\n","import React from \"react\";\nclass ListGroup extends React.Component {\n  render() {\n    const { items, onItemChange, currentItem, textProperty, valueProperty } =\n      this.props;\n\n    return (\n      <ul className=\"list-group\">\n        {items.map((item) => (\n          <li\n            onClick={() => onItemChange(item)}\n            key={item[valueProperty]}\n            className={\n              item.name === currentItem.name\n                ? \"list-group-item active\"\n                : \"list-group-item\"\n            }\n          >\n            {item[textProperty]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import axios from 'axios';\n\n//this is get based URL from environment variable  --> .env.development / .env.production\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\nexport function setTokenInHeader(token) {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  }\n}\n\naxios.interceptors.response.use(null, (error) => {\n  if (error.response.status === 401) {\n    alert('Please login/register before CREATE, UPDATE and DELETE content');\n  }\n  if (error.response.status === 403) {\n    alert('Sorry, only admin users can DELETE content');\n  }\n  // const unexpectedError =\n  //   error.response &&\n  //   error.response.status >= 404 &&\n  //   error.response.status < 500;\n  // if (!unexpectedError) {\n  //   logger.logError(error);\n  //   alert('UNexpected error occurs');\n  // }\n\n  return Promise.reject(error);\n  //we have to retuen it, in order to call the catch block automatically\n});\n\nexport default {\n  get: axios.get, //get data from server\n  post: axios.post, //create new data\n  put: axios.put, // change data\n  delete: axios.delete, //delete data\n};\n","import http from './httpServicess';\n\nexport const getGenres = async () => {\n  const { data } = await http.get('/genres');\n  //console.log(data,'hi get genres from server')\n  return data;\n};\n","import http from './httpServicess';\n\nconst movieApiEndpoint = '/movies';\n\nexport const getMovies = async () => {\n  const { data } = await http.get(movieApiEndpoint);\n  return data;\n};\n\nexport const getMovie = async (moiveId) => {\n  const { data } = await http.get(movieApiEndpoint + '/' + moiveId);\n  return data;\n};\n\nexport const saveMovie = async (movie) => {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    await http.put(movieApiEndpoint + '/' + movie._id, body);\n    return;\n  }\n\n  await http.post(movieApiEndpoint, movie);\n};\n\nexport const deleteMovie = async (movie) => {\n  await http.delete(movieApiEndpoint + '/' + movie._id);\n  const { data } = await http.get(movieApiEndpoint);\n  return data;\n};\n","import React from \"react\";\n\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\n\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { getGenres } from \"../services/genreService\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\n\nclass Movies extends React.Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentGenre: { _id: \"allGenres\", name: \"All Genres\" },\n    sortColumn: { path: \"title\", order: \"asc\" },\n    tableHeads: [\"Title\", \"Genre\", \"Stock\", \"Rate\", \"\"],\n    pageSize: 4,\n    currentPage: 1,\n    searchValue: \"\",\n  };\n\n  async componentDidMount() {\n    const genres = await getGenres(); \n    // const genres = getGenres();\n\n    this.setState({\n      movies: await getMovies(), // this is for call the real server\n      // movies: getMovies(),\n      genres: [{ _id: \"allGenres\", name: \"All Genres\"},...genres ],\n    });\n  }\n\n  onPaginationChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movieInDb = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies: movieInDb });\n\n    try {\n      await deleteMovie(movie);\n      // deleteMovie(movie);\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        alert(\"sorry, this post has been deletedå\");\n        this.setState({ movies: originalMovies });\n      }\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleMessage = (moviesLength) => {\n    if (moviesLength !== 0) {\n      return `There are ${moviesLength} movies on your list`;\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = this.state.movies;\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movie };\n    movies[index].liked = !movies[index].liked;\n    //console.log(this.state.movies[0]);\n    this.setState({ movies });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  onGenreChange = (genre) => {\n    //console.log(genre.name, \"hi current genre\");\n    this.setState({ currentGenre: genre, searchValue: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (e) => {\n    const searchValue = e.target.value;\n    this.setState({ searchValue, currentGenre: {}, currentPage: 1 });\n  };\n\n  getPagedData = () => {\n    const {\n      movies: allMovies,\n      pageSize,\n      currentPage,\n      currentGenre,\n      sortColumn,\n      searchValue,\n    } = this.state;\n\n    let filterMovies = allMovies;\n    if (searchValue) {\n      filterMovies = allMovies.filter((movie) =>\n        movie.title.toLowerCase().includes(searchValue.toLowerCase())\n      );\n    } else if (currentGenre.name === \"All Genres\") {\n      filterMovies = allMovies;\n    } else {\n      filterMovies = allMovies.filter(\n        (m) => m.genre.name === currentGenre.name\n      );\n    }\n\n    const sorted = _.orderBy(filterMovies, sortColumn.path, sortColumn.order);\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filterMovies.length, data: movies };\n  };\n\n  render() {\n    //console.log(this.state.movies, \"hi movies!!!!\");\n    const { genres, pageSize, currentPage, currentGenre, sortColumn } =\n      this.state;\n    const {user} = this.props\n    const result = this.getPagedData();\n\n    // console.log(user,'user from props?')\n    return (\n      <div className=\"d-flex flex-row mt-4\">\n        <div className=\"m-2 col-2\">\n          <ListGroup\n            items={genres}\n            onItemChange={this.onGenreChange}\n            currentItem={currentGenre}\n          />\n        </div>\n        <div className=\"m-2 col\">\n         { user&&<div>\n            <button type=\"button\" className=\"btn btn-primary\">\n              <Link\n                to=\"/movies/new\"\n                style={{ color: \"white\", textDecoration: \"none\" }}\n              >\n                New Movies\n              </Link>\n            </button>\n          </div>}\n\n          <p>Showing {result.totalCount} movies in the database.</p>\n\n          <div className=\"searchbox\">\n            <form className=\"d-flex\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                value={this.state.searchValue}\n                onChange={this.handleSearch}\n              />\n            </form>\n          </div>\n\n          <MoviesTable\n            movies={result.data}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n            sortColumn={sortColumn}\n   \n          />\n          <Pagination\n            itemCount={result.totalCount}\n            pageSize={pageSize}\n            onPaginationChange={this.onPaginationChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","const NotFound = () => {\n  return <h1>Sorry, not found page 404</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name} className=\"form-label\">\n        {label}\n      </label>\n      <input name={name} id={name} {...rest} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nconst Selections = ({ name, label, onChange, options, data }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name} className=\"form-label \">\n        {label}\n      </label>\n      <div className=\"selection\">\n        <select\n          className=\"form-select\"\n          aria-label=\"Default select example\"\n          onChange={onChange}\n        >\n          {options.map((option) => (\n            <option\n              selected={data.genreId === option._id}\n              key={option._id}\n              value={option._id}\n            >\n              {option.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default Selections;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Selections from \"./selections\";\nclass Form extends React.Component {\n  state = {\n    data: {},\n    errors: {},\n    genres: [],\n  };\n  validation = () => {\n\n    const { data } = this.state;\n    const errors = {};\n    const result = Joi.validate(data, this.schema, { abortEarly: false });\n    if (!result.error) {\n      return null;\n    }\n    for (let item of result.error.details) {\n      errors[item.path[0]] = item.message;\n    }\n\n    return errors;\n\n  };\n\n  validationProperty = (currentTarget) => {\n    const obj = { [currentTarget.name]: currentTarget.value };\n    const schema = { [currentTarget.name]: this.schema[currentTarget.name] };\n    const result = Joi.validate(obj, schema);\n    if (!result.error) {\n      return null;\n    } else {\n      return result.error.details[0].message;\n    }\n\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = this.validation();\n    this.setState({ errors: errors || {} });\n    if (errors != null) {\n      return;\n    }\n\n    this.doSubmit();\n  };\n\n  handleChange = (e) => {\n    const { currentTarget } = e;\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validationProperty(currentTarget);\n    if (errorMessage) {\n      errors[currentTarget.name] = errorMessage;\n    } else {\n      delete errors[currentTarget.name];\n    }\n\n    //\n    const data = { ...this.state.data };\n    data[currentTarget.name] = currentTarget.value;\n    this.setState({ data, errors });\n    //console.log(data, \"hi on change\");\n  };\n\n  handleSelect = (e) => {\n    const data = { ...this.state.data };\n    data.genreId = e.currentTarget.value;\n    this.setState({ data });\n  };\n\n  helperInput(name, label, type = \"text\") {\n    //  console.log(\"fff\", this.state.data);\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n  helperSelection(name, label) {\n    const { genres, data } = this.state;\n    return (\n      <Selections\n        name={name}\n        label={label}\n        options={genres}\n        data={data}\n        onChange={this.handleSelect}\n      />\n    );\n  }\n\n  helperButton(label) {\n    return (\n      <button disabled={this.validation()} className=\"btn btn-primary mt-3\">\n        {label}\n      </button>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { getGenres } from \"../../services/genreService\";\nimport { getMovie, saveMovie } from \"../../services/movieService\";\nimport Form from \"./form\";\n\n//\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    errors: {},\n    genres: [],\n  };\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().min(5).required().label(\"Title\"),\n    genreId: Joi.string().min(5).required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .min(0)\n      .max(10)\n      .required()\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .min(0)\n      .max(5)\n      .required()\n      .label(\"Daily Rental Rate\"),\n  };\n\n  async polupateGenres() {\n    const genres = await getGenres(); //for real server\n\n    // const genres = getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") {\n      return;\n    }\n\n    try {\n      const movie = await getMovie(movieId); //for real server\n      const data = this.mapMovieToView(movie);\n      this.setState({ data });\n    } catch (error) {\n      console.log('error from not found movieId ',error.response.status)\n      if (error.response && error.response.status === 404) {\n        this.props.history.replace(\"/notFound\");\n      }\n    }\n  }\n\n  componentDidMount() {\n    //await this.polupateGenres();\n    //await this.populateMovie();\n\n    this.polupateGenres();\n    this.populateMovie();\n  }\n  //\n\n  mapMovieToView = (movie) => {\n    //console.log(\"fff2\", movie);\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  };\n\n  handleSelect = (e) => {\n    const data = { ...this.state.data };\n    data.genreId = e.currentTarget.value;\n    this.setState({ data });\n  };\n\n  //\n\n  async doSubmit() {\n     await saveMovie(this.state.data);  // real server call\n    // saveMovie(this.state.data);\n    this.props.history.push(\"/movies\");\n    console.log(\"submited\");\n  }\n\n  render() {\n    //console.log(this.state.data.genreId, \"fff,hi genreeeeeeId\");\n    //console.log(this.state.data, \"hi state datasss\");\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form className=\"login\" onSubmit={this.handleSubmit}>\n          {this.helperInput(\"title\", \"Title\")}\n          {this.helperSelection(\"genres\", \"Genres\")}\n          {this.helperInput(\"numberInStock\", \"Number in Stock\")}\n          {this.helperInput(\"dailyRentalRate\", \"Daily Rental Rate\")}\n          {this.helperButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import http from './httpServicess';\n\nconst registerApiEndpoint = '/users';\n\nexport const register = async (user) => {\n  const response = await http.post(registerApiEndpoint, user);\n  console.log(response, 'response from registerService.js 000');\n  return response;\n};\n","import http, { setTokenInHeader } from './httpServicess';\nimport jwt_decode from 'jwt-decode';\n\nconst authApiEndpoint = '/auth';\n\nexport const login = async (user) => {\n  const { data: jwt } = await http.post(authApiEndpoint, user);\n  localStorage.setItem('token', jwt);\n  return jwt;\n};\n\nexport const logout = async () => {\n  localStorage.removeItem('token');\n};\n\nexport const getCurrentUserFromLocalStorage = () => {\n  try {\n    const token = localStorage.getItem('token');\n    const user = jwt_decode(token);\n    return user;\n  } catch (ex) {\n    return null;\n  }\n};\n\nexport const loginWithJwt = (response) => {\n  console.log(response, 'response authService 222');\n  const token = response.headers['x-auth-token'];\n  localStorage.setItem('token', token);\n};\n\nexport const getTokenFromLocalStorage = () => {\n  const token = localStorage.getItem('token');\n  // console.log(token, 'token from local storage xoxo');\n  return token;\n};\n\nsetTokenInHeader(getTokenFromLocalStorage());\n","import React from 'react'\nimport Form from './common/form'\nimport Joi from \"joi-browser\";\nimport { register } from \"../services/registerService\";\nimport { loginWithJwt } from '../services/authService';\n\n\nexport default class Register extends Form {\n    state = {\n        data: {\n          name: \"\",\n          email: \"\",\n          password: \"\",\n   \n        },\n        errors: {},\n   \n      };\n      schema = {\n        name: Joi.string(),\n        email: Joi.string().min(5).email().required().label(\"Email\"),\n        password: Joi.string().min(6).required().label(\"Password\"),\n        \n      };\n\n      async doSubmit() {\n        \n        try {\n        const response = await register(this.state.data);\n        console.log(response,'response register.js 111')\n        loginWithJwt(response)\n         window.location = '/'\n  \n        } catch (ex) {\n          // console.log(ex.response, 'what is res?')\n         if(ex.response && ex.response.status === 400){\n           const errors = {...this.state.errors}\n           errors.email = ex.response.data\n           this.setState({errors})\n         }\n        }\n      }\n  render() {\n    return (\n        <div>\n        <h1>Register </h1>\n        <form className=\"register\" onSubmit={this.handleSubmit}>\n          {this.helperInput(\"name\", \"Name\")}\n          {this.helperInput(\"email\", \"Email\")}\n          {this.helperInput(\"password\", \"Password\")}\n          {this.helperButton(\"Register\")}\n        </form>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Form from './common/form'\nimport Joi from \"joi-browser\";\nimport { login } from \"../services/authService\";\n\n\nexport default class Login extends Form {\n    state = {\n        data: {\n          email: \"\",\n          password: \"\",\n        },\n        errors: {},\n      };\n      schema = {\n        email: Joi.string().min(5).email().required().label(\"Email\"),\n        password: Joi.string().min(6).required().label(\"Password\"),\n        \n      };\n      \n\n\n      async doSubmit() {\n        \n        \n        try {\n          await login(this.state.data);\n          window.location = '/'\n        } catch (ex) {\n          console.log(ex.response, 'what is res?')\n         if(ex.response && ex.response.status === 400){\n           const errors = {...this.state.errors}\n           errors.email = ex.response.data\n           this.setState({errors})\n         }\n        }\n      }\n\n\n  render() {\n    console.log(this.props, 'props from login.js')\n    return (\n        <div>\n        <h1>Login </h1>\n        <form className=\"login\" onSubmit={this.handleSubmit}>\n\n          {this.helperInput(\"email\", \"Email\")}\n          {this.helperInput(\"password\", \"Password\")}\n          {this.helperButton(\"Login\")}\n        </form>\n      </div>\n    )\n  }\n}\n","\n\n\n\nimport { Component } from 'react';\nimport { logout } from '../services/authService';\n\nexport default class Logout extends Component {\n    componentDidMount = () => {\n        logout()\n        window.location = '/'\n    };\n    \n  render() {\n    return (\n      null\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/common/navBar';\nimport Movies from './components/movies';\nimport NotFound from './components/common/notFound';\nimport MovieForm from './components/common/movieForm';\nimport Register from './components/register';\nimport Login from './components/login';\nimport Logout from './components/logout';\nimport { getCurrentUserFromLocalStorage } from './services/authService';\n\nexport default class App extends Component {\n  state = {};\n  componentDidMount = () => {\n    const user = getCurrentUserFromLocalStorage();\n    this.setState({ user });\n  };\n\n  render() {\n    // console.log(this.state.user, 'state user?');\n    return (\n      <React.Fragment>\n        <NavBar user={this.state.user} />\n        <Switch>\n          <Route path='/login' component={Login} />\n          <Route path='/logout' component={Logout} />\n          <Route\n            path='/movies/:id'\n            render={(props) => {\n              if (!this.state.user) {\n                alert(\n                  'Please login/register before CREATE, UPDATE and DELETE content'\n                );\n                return <Redirect to='/login' />;\n              } else {\n                return <MovieForm {...props} />;\n              }\n            }}\n          />\n          <Route\n            path='/movies'\n            render={(props) => <Movies {...props} user={this.state.user} />}\n          />\n          <Route path='/register' component={Register} />\n          <Route path='/not-found' component={NotFound} />\n          <Redirect from='/' exact to='/movies' />\n          <Redirect to='not-found' />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nconsole.log(process.env, 'xoxo env?');\n\nReactDOM.render(\n  <React.Fragment>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}